{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ThemeService = /*#__PURE__*/(() => {\n  var _class;\n  class ThemeService {\n    constructor() {\n      this.darkMode = true;\n      this.themeSubject = new BehaviorSubject(this.darkMode ? \"dark\" : \"light\");\n    }\n    toggleDarkMode() {\n      this.darkMode = !this.darkMode;\n      this.themeSubject.next(this.darkMode ? \"dark\" : \"light\");\n      const root = document.documentElement;\n      const newTheme = root.className === \"dark\" ? \"light\" : \"dark\";\n      root.className = newTheme;\n    }\n    getTheme() {\n      return this.themeSubject.asObservable();\n    }\n  }\n  _class = ThemeService;\n  _class.ɵfac = function ThemeService_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return ThemeService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}