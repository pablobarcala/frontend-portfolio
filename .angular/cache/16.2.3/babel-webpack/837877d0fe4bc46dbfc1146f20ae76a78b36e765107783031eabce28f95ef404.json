{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ThemeService {\n  constructor() {\n    this.darkMode = true;\n    this.themeSubject = new BehaviorSubject(this.darkMode ? \"dark\" : \"light\");\n  }\n  toggleDarkMode() {\n    this.darkMode = !this.darkMode;\n    this.themeSubject.next(this.darkMode ? \"dark\" : \"light\");\n  }\n}\n_class = ThemeService;\n_class.ɵfac = function ThemeService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","ThemeService","constructor","darkMode","themeSubject","toggleDarkMode","next","factory","ɵfac","providedIn"],"sources":["E:\\CURSOS\\Cursos\\practicas\\portfolio\\src\\app\\services\\theme.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private darkMode: boolean = true;\n  private themeSubject: BehaviorSubject<string> = new BehaviorSubject<string>(this.darkMode ? \"dark\" : \"light\");\n\n  constructor() { }\n\n  toggleDarkMode() {\n    this.darkMode = !this.darkMode;\n    this.themeSubject.next(this.darkMode ? \"dark\" : \"light\");\n  }\n}\n"],"mappings":";AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,YAAY;EAIvBC,YAAA;IAHQ,KAAAC,QAAQ,GAAY,IAAI;IACxB,KAAAC,YAAY,GAA4B,IAAIJ,eAAe,CAAS,IAAI,CAACG,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;EAE7F;EAEhBE,cAAcA,CAAA;IACZ,IAAI,CAACF,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;IAC9B,IAAI,CAACC,YAAY,CAACE,IAAI,CAAC,IAAI,CAACH,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;EAC1D;;SATWF,YAAY;;mBAAZA,MAAY;AAAA;;SAAZA,MAAY;EAAAM,OAAA,EAAZN,MAAY,CAAAO,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}